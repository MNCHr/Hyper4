bmv2 multicasting experiments

To multicast in bmv2, you must:
- .p4: include intrinsic metadata
  - the field is mcast_grp and is 4 bits, so values range from 0-15
  .p4: create action that sets the mcast_grp to 1-15
- CLI: create mc_nodes and associate them with 1-15; if you
  associate them with 0, it won't work
  - mc_mgrps do not have to be created first; they will automatically
    be created with an mc_node_associate command when the mc_mgrp doesn't
    already exist
- CLI: add table rule that invokes the mcast_grp-setting action in the .p4

When creating the mc_nodes, we can specify the rid (replication ID).  Best
guess is that the rid populates the egress_rid intrinsic metadata field
prior to packet's arrival in the egress pipeline, where we can look at
it to know on what basis the packet was delivered to that particular
pipeline.

Not sure why/how that would be used in practice.

Bottom line, for hp4, the dpmu server should send some commands
to hp4 at program load time or afterward:

  mc_node_create [mcast_grp ID] [port: from set associated w/ program]

Track handles for these nodes...

  mc_node_associate [mcast_grp_ID] [handle: from set associated w/ program]

Not clear how to manage mcast_grp_IDs.  We only have 15 of them and this
should be controlled by sysadmin.

Also unclear how to deal with various ways a source program might set the
mcast_grp: what if it uses a constant?  Clearly we should substitute this
for a 
